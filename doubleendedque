#include<stdio.h>
#include<stdlib.h>
int rear=-1,n,*que,front=-1;
void enque_at_rear(int val)
{
	if((front==0&&rear==n-1)||rear+1==front)
	{
		printf("queue if full\n");
	}
	else if(front==-1 &&rear==-1)
	{
		front=0;
		rear=0;
		que[rear]=val;
	}
	else
	{
		rear=(rear+1)%n;
		que[rear]=val;
	}
}
void enque_at_front(int val)
{
	if((front==0 && rear==n-1)||rear+1==front)
	{
		printf("queue is overflow");
	}
	else if(front==-1&&rear==-1)
	{
		front=0;
		rear=0;
		que[front]=val;
	}
	else
	{
		if(front==0)
		{
			front=n-1;
		}
		else
		{
			front--;
		}
		que[front]=val;
	}
	
}
int deque_at_rear()
{
	int val;
	if(front==-1 && rear==-1)
	{
		return -1;
	}
	else
	{
		val=que[front];
		front=-1;
		rear=-1;
		return val;
	}
	val=que[rear];
	if(rear==0)
	{
		rear=n-1;
	}
	else
	{
		rear--;
	}
	return val;
}
int deque_at_front()
{
	int val;
	if(front==-1 &&rear==-1)
	{
		return -1;
	}
	if(front==rear)
	{
		val=que[front];
		front=-1;
		rear=-1;
		return val;
	}
	val=que[front];
	front=(front+1)%n;
	return val;
}
void display()
{
   	int i,j;
   	if(rear==-1 && front==-1)
   	{
   		printf("queue is empty\n");
   		//printf("underflow");
	}
	else
	{
		i=front;
		j=rear;
		while(i!=j)
		{
		  printf("%d %d\n",i,que[i]);
		  i=(i+1)%n;	
		}	
		printf("%d %d\n",i,que[j]);
	}
}
void main()
{
	int ch,val;
	scanf("%d",&n);
	que=(int*)calloc(n,sizeof(int));
	while(1)
	{
		printf("1.enque at rear 2.deque at rear 3.enque at front 4.deque at front 5.display 6.exit:");
		scanf("%d",&ch);
		if(ch==1)
		{
			//enqueue function
			scanf("%d",&val);
			enque_at_rear(val);
		}
		else if(ch==2)
		{
			//dequeue function
			val=deque_at_rear();
			if(val==-1)
			{
				printf("queue is empty\n");
			}
			else
			{
				printf("%d\n",val);
			}
		}
		else if(ch==3)
		{
			scanf("%d",&val);
			enque_at_rear(val);
		}
		else if(ch==4)
		{
			val=deque_at_front();
			if(val==-1)
			{
				printf("queue is empty\n");
			}
			else
			{
				printf("%d\n",val);
			}
		}
		else if(ch==5)
		{
			display();
		}
		else
		{
			break;
		}
	}
}
