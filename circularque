#include<stdio.h>
#include<stdlib.h>
int rear=-1,n,*que,front=-1;
void enqueue(int val)
{
	int k;
	if((front==0 &&rear==n-1)||rear+1==front)
	{
		printf("queue is full\n");
		//printf("overflow");
	}
	else if(front==-1 && rear==-1)
	{
		rear=(rear+1)%n;
		que[rear]=val;
		front=0;
	}
	else
	{
		rear=(rear+1)%n;
	    que[rear]=val;
	}
}
int dequeue()
{
	int val;
	if(rear==-1 && front==-1)
	{
		return -1;
	}
	else if(front==rear)
	{
		val=que[front];
		front=-1;
		rear=-1;
		return val;
	}
	else
	{
		val=que[front];
		front=(front+1)%n;
		return val;
	}
}
void display()
{
   	int i;
   	if(rear==-1 && front==-1)
   	{
   		printf("queue is empty\n");
   		//printf("undeflow");
	}
	else
	{
		i=front;
		j=rear;
		while(i!=j)
		{
		  printf("%d ",que[i]);
		  i=(i+1)%n;	
		}	
		printf("%d\n",que[j]);
	}
}
void main()
{
	int ch,val;
	scanf("%d",&n);
	que=(int*)calloc(n,sizeof(int));
	while(1)
	{
		printf("1.enqueue 2.dequeue 3.display 4.exit");
		scanf("%d",&ch);
		if(ch==1)
		{
			//enqueue function
			scanf("%d",&val);
			enqueue(val);
		}
		else if(ch==2)
		{
			//dequeue function
			val=dequeue();
			if(val==-1)
			{
				printf("queue is empty");
			}
			else
			{
				printf("%d ",val);
			}
		}
		else if(ch==3)
		{
			//display function
			display();
		}
		else
		{
			break;
		}
	}
}
